# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET            /app/                              @controllers.Application.index
POST           /url/shorten                       @controllers.Destinations.shortenUrl
POST           /files/upload                      @controllers.Files.upload
GET            /files                             @controllers.Destinations.all

# Static pages
GET            /                                  @controllers.Application.landing

# Map static resources from the /public folder to the /assets URL path
GET            /assets/*file                      controllers.Assets.at(path="/public", file)

GET            /key/$key<[a-zA-Z0-9]+>            @controllers.Destinations.getFileInfoForKey(key)
#GET             /$key<[a-zA-Z0-9]+>             @controllers.Destinations.goToOriginalUrl(key)
OPTIONS        /*all                              @controllers.Application.preflight(all)

# I'm going to try to define my own Securesocial routes

# Login page
GET            /login                             @securesocial.controllers.LoginPage.login
GET            /logout                            @securesocial.controllers.LoginPage.logout

# Registration routes
GET            /signup                            @securesocial.controllers.Registration.startSignUp
POST           /signup                            @securesocial.controllers.Registration.handleStartSignUp
GET            /signup/:mailToken                 @securesocial.controllers.Registration.signUp(mailToken)
POST           /signup/:mailToken                 @securesocial.controllers.Registration.handleSignUp(mailToken)

# Reset password
GET            /reset                             @securesocial.controllers.PasswordReset.startResetPassword
POST           /reset                             @securesocial.controllers.PasswordReset.handleStartResetPassword
GET            /reset/:mailToken                  @securesocial.controllers.PasswordReset.resetPassword(mailToken)
POST           /reset/:mailToken                  @securesocial.controllers.PasswordReset.handleResetPassword(mailToken)

# Change Password
GET            /password                          @securesocial.controllers.PasswordChange.page
POST           /password                          @securesocial.controllers.PasswordChange.handlePasswordChange


# Authentication entry points for all providers
GET            /authenticate/:provider            @securesocial.controllers.ProviderController.authenticate(provider, redirectTo: Option[String])
POST           /authenticate/:provider            @securesocial.controllers.ProviderController.authenticateByPost(provider, redirectTo: Option[String])

POST           /api/authenticate/:provider        @securesocial.controllers.LoginApi.authenticate(provider, builder = "token")
GET            /assets/securesocial/*file         securesocial.controllers.Assets.at(path="/public/securesocial", file)
# If it is not defined, it is probably a file stored in pigion
GET            /$key<[a-zA-Z0-9]+>                @controllers.Destinations.downloadFileWithKey(key)


